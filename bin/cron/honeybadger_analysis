#!/usr/bin/env ruby
require_relative 'only_one'
# require '../../lib/cdo/data/logging/infrastructure_logger'
require '../../lib/cdo/honeybadger/honeybadger_fault_analyzer'
require '../../lib/cdo/honeybadger/honeybadger_url_builder'
abort 'Script already running' unless only_one_running?(__FILE__)

require File.expand_path('../../../pegasus/src/env', __FILE__)

def main
  filters = ['-is:resolved', '-is:paused%20', '-is:ignored', "environment:\"#{rack_env}\"", 'assignee:"nobody"']
  time_filters = %W[start=#{Time.at(30.day.ago.to_i).iso8601} stop=#{Time.at(1.day.ago.to_i).iso8601}]
  honeybadger_url_builder = HoneybadgerUrlBuilder.new(time_filters, filters)

  analyzer = HoneybadgerFaultAnalyzer.new(honeybadger_url_builder)

  project_id = 3240

  reports = analyzer.get_reports(project_id)
  puts reports
end

main
