<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:25:29.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `BankAccount`(#e7e8ea) class represents a bank account and has instance variables for the customer's name and starting balance. The `BasicAccount`(#e7e8ea) class represents a basic bank account.\r\n\r\nThe `BasicAccount`(#e7e8ea) class overrides the `withdraw()`(#e7e8ea) method to charge a $30 fee if a withdrawal causes an account to be overdrawn (balance is negative).\r\n\r\n##In Bank.java:\r\n\r\n1. Write the `printAccounts()`(#e7e8ea) method to traverse the `BankAccount`(#e7e8ea) array.\r\n\r\n   * Withdraw `300`(#e7e8ea) from each account.\r\n   \r\n   * Print the customer's name and new balance using the `getName()`(#e7e8ea) and `getBalance()`(#e7e8ea) methods.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Create an `BankAccount`(#e7e8ea) array containing the `BankAccount`(#e7e8ea) objects.\r\n\r\n3. Instantiate a `Bank`(#e7e8ea) object with the `BankAccount`(#e7e8ea) array and call the `printAccounts()`(#e7e8ea) method.",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    BankAccount first = new BankAccount(\"Shakila\", 500);\n    BasicAccount second = new BasicAccount(\"Ali\", 200);\n    BankAccount third = new BankAccount(\"Valentina\", 100);\n    BasicAccount fourth = new BasicAccount(\"Maria\", 800);\n\n    // TO DO #2: Create a BankAccount array containing the BankAccount objects.\n\n    \n    // TO DO #3: Instantiate a Bank account with the BankAccount array\n    // and call the printAccounts() method.\n    \n    \n  }\n}",
        "isVisible": true
      },
      "BankAccount.java": {
        "text": "/*\n * Represents a bank account\n */\npublic class BankAccount {\n\n  private String customerName;  // The name of the account holder\n  private double balance;       // The starting balance of the account\n\n  /*\n   * Constructor to create a BankAccount object\n   * with a specified name and starting balance\n   */\n  public BankAccount(String customerName, double balance) {\n    this.customerName = customerName;\n    this.balance = balance;\n  }\n\n  /*\n   * Adds a given amount to the balance\n   */\n  public void deposit(double amount) {\n    balance += amount;\n  }\n\n  /*\n   * Subtracts a given amount from the balance\n   */\n  public void withdraw(double amount) {\n    balance -= amount;\n  }\n\n  /*\n   * Gets the customer's name\n   */\n  public String getName() {\n    return customerName;\n  }\n\n  /*\n   * Gets the current balance\n   */\n  public double getBalance() {\n    return balance;\n  }\n  \n}",
        "isVisible": true
      },
      "BasicAccount.java": {
        "text": "/*\n * Represents a basic bank account\n */\npublic class BasicAccount extends BankAccount {\n\n  /*\n   * Constructor to create a BasicAccount object\n   * with a specified name and starting balance\n   */\n  public BasicAccount(String customerName, double balance) {\n    super(customerName, balance);  // Calls the BankAccount constructor\n  }\n\n  /*\n   * Subtracts a given amount from the balance and\n   * charges a fee if the withdrawal overdraws the account\n   */\n  public void withdraw(double amount) {\n    super.withdraw(amount);\n\n    if (getBalance() < 0) {\n      super.withdraw(30);\n    }\n  }\n  \n}",
        "isVisible": true
      },
      "Bank.java": {
        "text": "/*\n * Represents a bank\n */\npublic class Bank {\n\n  private BankAccount[] accounts;\n\n  /*\n   * Creates a Bank with an array of bank accounts\n   */\n  public Bank(BankAccount[] accounts) {\n    this.accounts = accounts;\n  }\n\n  /*\n   * Returns the array of bank accounts\n   */\n  public BankAccount[] getAccounts() {\n    return accounts;\n  }\n\n  /*\n   * Prints the information about each bank account\n   */\n  public void printAccounts() {\n    // TO DO #1: Traverse the BankAccount array and withdraw 300\n    // from each account then print the balance for each account.\n\n\n    \n  }\n  \n}",
        "isVisible": true
      }
    },
    "display_name": "Bank Account",
    "bubble_choice_description": "Create a BankAccount array and get the balances for each bank account.",
    "thumbnail_url": "https://images.code.org/fc160e1197069043a285a4e9f26a8e9b-image-1648730510117.png",
    "encrypted_exemplar_sources": "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\na2EqTummXL1Q3KsrClm1MKK66tRUu5423g==\n",
    "name_suffix": "_pilot-2022"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:29.514+00:00\",\"changed\":[\"cloned from \\\"CSA U3L7-L4b_2022\\\"\"],\"cloned_from\":\"CSA U3L7-L4b_2022\"}]"
}]]></config>
</Javalab>
