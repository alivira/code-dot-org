<Javalab>
  <config><![CDATA[{
  "game_id": 68,
  "created_at": "2022-08-23T20:25:29.000Z",
  "level_num": "custom",
  "user_id": 16889,
  "properties": {
    "encrypted": "false",
    "long_instructions": "The `Dessert`(#e7e8ea) class represents a dessert at Project Mercury Pastries Food Truck and has instance variables for the flavor, price, and quantity ordered.\r\n\r\nThe `Cookie`(#e7e8ea) and `Pie`(#e7e8ea) classes are subclasses of the `Dessert`(#e7e8ea) class. These classes override the `getTotalPrice()`(#e7e8ea) method to discount the price of the order if the quantity is over a specific amount.\r\n\r\n##In Dessert.java:\r\n\r\n1. Write a method called `printDesserts()`(#e7e8ea) with a parameter for a `Dessert`(#e7e8ea) array.\r\n\r\n   * Traverse the `Dessert`(#e7e8ea) array and print the flavor of each dessert using the `getFlavor()`(#e7e8ea) method and the total prices of each dessert order.\r\n\r\n##In MyConsole.java:\r\n\r\n2. Create an `Dessert`(#e7e8ea) array containing the `Dessert`(#e7e8ea) objects.\r\n\r\n3. Call the `printDesserts()`(#e7e8ea) method on one of the `Dessert`(#e7e8ea) objects with the `Dessert`(#e7e8ea) array.",
    "mini_rubric": "false",
    "hide_share_and_remix": "false",
    "submittable": "false",
    "csa_view_mode": "console",
    "start_sources": {
      "MyConsole.java": {
        "text": "public class MyConsole {\n  public static void main(String[] args) {\n\n    Dessert first = new Dessert(\"vanilla\", 2.99, 4);\n    Cookie second = new Cookie(\"oatmeal\", 1.50, 12, 6, true);\n    Pie third = new Pie(\"cherry\", 4.75, 4, \"cherry\", true);\n\n    // TO DO #1: Create a Dessert array containing the Dessert objects.\n    \n\n    // TO DO #3: Call the printDesserts() method on one of the Dessert objects.\n\n    \n    \n  }\n}",
        "isVisible": true
      },
      "Dessert.java": {
        "text": "/*\n * A Dessert that the Project Mercury Pastries Food Truck sells\n */\npublic class Dessert {\n\n  private String flavor;  // The flavor of the dessert\n  private double price;   // The price of the dessert\n  private int quantity;   // The quantity of desserts ordered\n\n  /*\n   * Constructor to create a plain Dessert\n   */\n  public Dessert() {\n    flavor = \"plain\";\n    price = 0.00;\n    quantity = 0;\n  }\n\n  /*\n   * Constructor create a Dessert with\n   * specified flavor, price, and quantity\n   */\n  public Dessert(String newFlavor, double newPrice, int newQuantity) {\n    flavor = newFlavor;\n    price = newPrice;\n    quantity = newQuantity;\n  }\n\n  /*\n   * Gets the flavor of the dessert\n   */\n  public String getFlavor() {\n    return flavor;\n  }\n\n  /*\n   * Gets the quantity of desserts ordered\n   */\n  public int getQuantity() {\n    return quantity;\n  }\n\n  /*\n   * Gets the total price of the dessert order\n   */\n  public double getTotalPrice() {\n    return price * quantity;\n  }\n  \n}",
        "isVisible": true
      },
      "Cookie.java": {
        "text": "/*\n * A Cookie that the Project Mercury Pastries Food Truck sells\n */\npublic class Cookie extends Dessert {\n\n  private int diameter;     // The diameter of the Cookie\n  private boolean isChewy;  // Whether or not the Cookie is chewy\n\n  /*\n   * Constructor to create a plain Cookie\n   */\n  public Cookie() {\n    diameter = 0;\n    isChewy = false;\n  }\n\n  /*\n   * Constructor create a Cookie with specified\n   * flavor, price, quantity, diameter, and chewy status\n   */\n  public Cookie(String newFlavor, double newPrice, int newQuantity, int newDiameter, boolean newChewy) {\n    super(newFlavor, newPrice, newQuantity);\n    diameter = newDiameter;\n    isChewy = newChewy;\n  }\n\n  /*\n   * Gets the total price of the dessert order\n   */\n  public double getTotalPrice() {\n    double total = super.getTotalPrice();\n\n    if (getQuantity() > 6) {\n      total *= .75;\n    }\n\n    return total;\n  }\n  \n}",
        "isVisible": true
      },
      "Pie.java": {
        "text": "/*\n * A Pie that the Project Mercury Pastries Food Truck sells\n */\npublic class Pie extends Dessert {\n\n  private String filling;    // The filling flavor of the Pie\n  private boolean hasCrust;  // Whether or not the Pie has a crust\n\n  /*\n   * Constructor to create a plain Pie\n   */\n  public Pie() {\n    filling = \"none\";\n    hasCrust = false;\n  }\n\n  /*\n   * Constructor create a Pie with specified\n   * flavor, price, quantity, filling flavor, and crust status\n   */\n  public Pie(String newFlavor, double newPrice, int newQuantity, String newFilling, boolean newCrust) {\n    super(newFlavor, newPrice, newQuantity);\n    filling = newFilling;\n    hasCrust = newCrust;\n  }\n\n  /*\n   * Gets the total price of the dessert order\n   */\n  public double getTotalPrice() {\n    double total = super.getTotalPrice();\n\n    if (getQuantity() > 2) {\n      total *= .8;\n    }\n\n    return total;\n  }\n\n}",
        "isVisible": true
      }
    },
    "encrypted_exemplar_sources": "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\n",
    "display_name": "Dessert",
    "bubble_choice_description": "Create a Dessert array and get the prices for dessert order.",
    "thumbnail_url": "https://images.code.org/d53b64e6ba27863e19f0ce68d43c92f3-image-1648732111332.png",
    "name_suffix": "_pilot-2022"
  },
  "published": true,
  "audit_log": "[{\"changed_at\":\"2022-08-23T20:25:29.649+00:00\",\"changed\":[\"cloned from \\\"CSA U3L7-L4c_2022\\\"\"],\"cloned_from\":\"CSA U3L7-L4c_2022\"}]"
}]]></config>
</Javalab>
